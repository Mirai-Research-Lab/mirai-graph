// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BoughtItem extends ethereum.Event {
  get params(): BoughtItem__Params {
    return new BoughtItem__Params(this);
  }
}

export class BoughtItem__Params {
  _event: BoughtItem;

  constructor(event: BoughtItem) {
    this._event = event;
  }

  get nftAddres(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ItemAdded extends ethereum.Event {
  get params(): ItemAdded__Params {
    return new ItemAdded__Params(this);
  }
}

export class ItemAdded__Params {
  _event: ItemAdded;

  constructor(event: ItemAdded) {
    this._event = event;
  }

  get nftAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ItemCancelled extends ethereum.Event {
  get params(): ItemCancelled__Params {
    return new ItemCancelled__Params(this);
  }
}

export class ItemCancelled__Params {
  _event: ItemCancelled;

  constructor(event: ItemCancelled) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Marketplace__getListingInfoResultListingStruct extends ethereum.Tuple {
  get price(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  getAmountOwned(seller: Address): BigInt {
    let result = super.call(
      "getAmountOwned",
      "getAmountOwned(address):(uint256)",
      [ethereum.Value.fromAddress(seller)]
    );

    return result[0].toBigInt();
  }

  try_getAmountOwned(seller: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAmountOwned",
      "getAmountOwned(address):(uint256)",
      [ethereum.Value.fromAddress(seller)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getListingInfo(
    nftAddress: Address,
    tokenId: BigInt
  ): Marketplace__getListingInfoResultListingStruct {
    let result = super.call(
      "getListingInfo",
      "getListingInfo(address,uint256):((uint256,address))",
      [
        ethereum.Value.fromAddress(nftAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return changetype<Marketplace__getListingInfoResultListingStruct>(
      result[0].toTuple()
    );
  }

  try_getListingInfo(
    nftAddress: Address,
    tokenId: BigInt
  ): ethereum.CallResult<Marketplace__getListingInfoResultListingStruct> {
    let result = super.tryCall(
      "getListingInfo",
      "getListingInfo(address,uint256):((uint256,address))",
      [
        ethereum.Value.fromAddress(nftAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Marketplace__getListingInfoResultListingStruct>(
        value[0].toTuple()
      )
    );
  }
}

export class BuyItemCall extends ethereum.Call {
  get inputs(): BuyItemCall__Inputs {
    return new BuyItemCall__Inputs(this);
  }

  get outputs(): BuyItemCall__Outputs {
    return new BuyItemCall__Outputs(this);
  }
}

export class BuyItemCall__Inputs {
  _call: BuyItemCall;

  constructor(call: BuyItemCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyItemCall__Outputs {
  _call: BuyItemCall;

  constructor(call: BuyItemCall) {
    this._call = call;
  }
}

export class CancelItemCall extends ethereum.Call {
  get inputs(): CancelItemCall__Inputs {
    return new CancelItemCall__Inputs(this);
  }

  get outputs(): CancelItemCall__Outputs {
    return new CancelItemCall__Outputs(this);
  }
}

export class CancelItemCall__Inputs {
  _call: CancelItemCall;

  constructor(call: CancelItemCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelItemCall__Outputs {
  _call: CancelItemCall;

  constructor(call: CancelItemCall) {
    this._call = call;
  }
}

export class ListItemCall extends ethereum.Call {
  get inputs(): ListItemCall__Inputs {
    return new ListItemCall__Inputs(this);
  }

  get outputs(): ListItemCall__Outputs {
    return new ListItemCall__Outputs(this);
  }
}

export class ListItemCall__Inputs {
  _call: ListItemCall;

  constructor(call: ListItemCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ListItemCall__Outputs {
  _call: ListItemCall;

  constructor(call: ListItemCall) {
    this._call = call;
  }
}

export class UpdateItemCall extends ethereum.Call {
  get inputs(): UpdateItemCall__Inputs {
    return new UpdateItemCall__Inputs(this);
  }

  get outputs(): UpdateItemCall__Outputs {
    return new UpdateItemCall__Outputs(this);
  }
}

export class UpdateItemCall__Inputs {
  _call: UpdateItemCall;

  constructor(call: UpdateItemCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get updatedPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateItemCall__Outputs {
  _call: UpdateItemCall;

  constructor(call: UpdateItemCall) {
    this._call = call;
  }
}

export class WithdrawAmountCall extends ethereum.Call {
  get inputs(): WithdrawAmountCall__Inputs {
    return new WithdrawAmountCall__Inputs(this);
  }

  get outputs(): WithdrawAmountCall__Outputs {
    return new WithdrawAmountCall__Outputs(this);
  }
}

export class WithdrawAmountCall__Inputs {
  _call: WithdrawAmountCall;

  constructor(call: WithdrawAmountCall) {
    this._call = call;
  }
}

export class WithdrawAmountCall__Outputs {
  _call: WithdrawAmountCall;

  constructor(call: WithdrawAmountCall) {
    this._call = call;
  }
}
